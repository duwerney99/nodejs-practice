name: Main Flow
on:
    push:
        branches:
            - 'master'
            - 'testing'
            - 'dev'
env:
    SERVICE_NAME: ${{ github.event.repository.name }}
    REGION: us-central1
    PROJECT_ID_TEST: my-nodejs-app-438001
jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        name: Build and deploy
        outputs:
            url: ${{ steps.extract_url.outputs.url }}
            branch: ${{ steps.extract_branch.outputs.branch }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Extract branch name
              shell: bash
              run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
              id: extract_branch
            - name: Set branch-based environment variables
              uses: iamtheyammer/branch-env-vars@v1.0.3
              with:
                  GCP_PROJECT: |
                      master:${{ secrets.PROJECT_ID_PROD }}
                      testing:${{ secrets.PROJECT_ID_TEST }}
                      !default:${{ secrets.PROJECT_ID_DEV }}
                  ENV_FILE: |
                      master:ENV_PROD
                      testing:ENV_TEST
                      !default:ENV_DEV
            - name: Cache node modules
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
            - name: Install and Build
              uses: ./.github/actions/build
            - name: Create ENV File
              run: echo ${{ secrets[env.ENV_FILE] }} | base64 --decode > .env
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v0
              with:
                  project_id: ${{ env.GCP_PROJECT }}
                  service_account_key: ${{ secrets.GCP_KEY }}
                  export_default_credentials: true
            - name: Build and deploy image
              run: PROJECT_ID=$GCP_PROJECT COMMIT_SHA=${{ github.sha }} SERVICE_NAME=$SERVICE_NAME make deploy
            - name: Deploy to Cloud Run
              run: |-
                  gcloud run deploy $SERVICE_NAME \
                    --image gcr.io/$GCP_PROJECT/$SERVICE_NAME:${{ github.sha }} \
                    --allow-unauthenticated \
                    --region $REGION \
                    --max-instances 2
            - name: Get URL Cloud Run
              shell: bash
              run: echo "##[set-output name=url;]$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')"
              id: extract_url